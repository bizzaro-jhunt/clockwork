#!/bin/sh

#
# cw-localsys - Portable Bourne Shell Package/Service Manager
#
# author:  James Hunt <james@niftylogic.com>
# created: 2014-05-20
#

# USAGE: cw-localsys <action> [arguments]
#
# Supported actions:
#
#   identify
#
#   svc-run-status  <service>
#   svc-boot-status <service>
#   svc-init        <service> <action>
#   svc-init-force  <service> <action>
#   svc-enable      <service>
#   svc-disable SVC <service>
#
#   pkg-version <package>
#   pkg-latest  <package>
#   pkg-install <package> <version>
#   pkg-remove  <package>
#   pkg-recache
#

export PATH=/sbin:/bin:/usr/sbin:/usr/bin

#################################################################

# IMPLEMENTORS!
#
# This script communicates to the outside world via the first
# line of stdout, and the return code.  Here's a rundown of how
# each action is expected to behave:
#
#   svc-run-status
#       output is ignored
#       returns:
#         0 = service is running
#        !0 = service is NOT running
#
#   svc-boot-status
#       output is ignored
#       returns:
#         0 = service will start on boot
#        !0 = service will NOT start on boot
#
#   svc-init
#       output is ignored
#       returns (whatever the init script returns)
#         0 = success
#        !0 = failure (usually)
#
#   svc-init-force
#       output is ignored
#       returns (whatever the init script returns):
#         0 = success
#        !0 = failure (usually)
#
#   svc-enable
#       output is ignored
#       returns:
#         0 = service has been enabled to start at boot
#        !0 = failed to enable service
#
#   svc-disable
#       output is ignored
#       returns:
#         0 = service has been disabled (won't start at boot)
#        !0 = failed to disable service
#
#   pkg-version
#   pkg-latest
#   pkg-install
#   pkg-remove
#   pkg-recache
#

#################################################################
# AUTO-DETECTION
#

AUTO_PKG=undetermined
if test -x "/usr/bin/dpkg-query" \
&& test -x "/usr/bin/apt-get"; then
	AUTO_PKG=debian

elif test -x "/bin/rpm" \
  && test -x "/usr/bin/yum"; then
	AUTO_PKG=redhat

elif test -x "/usr/bin/emerge" \
  && test -x "/usr/bin/eix"; then
	AUTO_PKG=gentoo
fi

AUTO_SVC=undetermined
if test -x "/usr/sbin/invoke-rc.d" \
&& test -x "/usr/sbin/update-rc.d"; then
	AUTO_SVC=debian

elif test -x "/sbin/chkconfig"; then
	AUTO_SVC=redhat

elif test -x "/sbin/rc-update"; then
	AUTO_SVC=gentoo
fi


#################################################################

ACTION=$1
test -z "$ACTION" || shift

test "x$SYSTYPE" = "x" && SYSTYPE="auto"
if [ "x$SYSTYPE" = "xauto" ]; then
	SYSTYPE=undetermined
	case $ACTION in
	pkg-*) SYSTYPE=$AUTO_PKG ;;
	svc-*) SYSTYPE=$AUTO_SVC ;;
	esac
fi

#################################################################

on_debian () {
	export DEBIAN_FRONTEND=noninteractive

	case $ACTION in
	pkg-version)
		NAME=$1
		out=$(/usr/bin/dpkg-query -W -f='${db:status-abbrev} ${Version}' "$NAME")
		rc=$?
		status=$(echo $out | cut -d " " -f1)
		version=$(echo $out | cut -d " " -f2)
		if [ "$status" = "rc" -o "$status" = "un" -o $rc -ne 0 ]; then
			exit 1 # treat as not installed
		elif [ "$status" = "ii" ]; then
			echo $version
			exit 0 # treat as installed
		else
			exit 2 # treat as broken
		fi
		;;
	pkg-latest)
		NAME=$1
		if test -x /usr/bin/apt-cache; then
			/usr/bin/apt-cache policy $NAME | grep Candidate | sed -e 's/[^:]*: *//' | tr -d '\n'
			exit $?
		fi
		exit 0
		;;
	pkg-install)
		NAME=$1
		VERSION=$2
		ARGS="-qq --assume-no -o Dpkg::Options::=--force-confdef -o Dpkg::Options::=--force-confold"
		if [ "x$VERSION" = "xlatest" ]; then
			/usr/bin/apt-get $ARGS install "$NAME" 2>&1
			exit $?
		else
			# specific version
			echo "$VERSION" | grep -q '-' || VERSION="$VERSION-*"
			/usr/bin/apt-get $ARGS install "$NAME=$VERSION" 2>&1
			exit $?
		fi
		;;
	pkg-remove)
		NAME=$1
		/usr/bin/dpkg --purge "$NAME" 2>&1
		exit $?
		;;
	pkg-recache)
		/usr/bin/apt-get update 2>&1
		exit $?
		;;

	svc-run-status)
		NAME=$1
		/usr/sbin/service $NAME status 2>&1
		RC=$?
		[ "x$RC" = "x7" ] && exit 1
		exit $RC
		;;
	svc-boot-status)
		NAME=$1
		/usr/sbin/invoke-rc.d --quiet --query "$NAME" start 2>&1
		RC=$?
		[ "x$RC" = "x104" ] && exit 0
		exit $RC
		;;
	svc-init)
		NAME=$1
		VERB=$2
		if test "x$NAME" = "xcogd" && test "x$VERB" = "xrestart" && test "x$COGD" != "x"; then
			touch /var/lock/cogd/.needs-restart
		else
			/usr/sbin/service $NAME $VERB
		fi
		exit $?
		;;
	svc-init-force)
		NAME=$1
		VERB=$2
		/usr/sbin/service $NAME $VERB 2>&1
		exit $?
		;;
	svc-enable)
		NAME=$1
		/usr/sbin/update-rc.d -f "$NAME" remove 2>&1
		/usr/sbin/update-rc.d    "$NAME" defaults 2>&1
		exit $?
		;;
	svc-disable)
		NAME=$1
		/usr/sbin/update-rc.d -f "$NAME" remove 2>&1
		exit $?
		;;
	esac
}

#################################################################

on_redhat () {
	case $ACTION in
	pkg-version)
		NAME=$1
		/bin/rpm --qf='%{VERSION}' -q "$NAME" | /bin/grp -qv 'is not installed$'
		exit $?
		;;
	pkg-latest)
		NAME=$1
		/usr/bin/repoquery --qf '%{VERSION}' -q "$NAME"
		exit 0
		;;
	pkg-install)
		NAME=$1
		VERSION=$2
		if [ "x$VERSION" = "xlatest" ]; then
			/usr/bin/yum install -qy "$NAME"
			exit $?
		else
			# specific version
			/usr/bin/yum install -qy "$NAME-$VERSION"
			exit $?
		fi
		;;
	pkg-remove)
		NAME=$1
		/usr/bin/yum erase -qy "$NAME"
		exit $?
		;;
	pkg-recache)
		/usr/bin/yum clean all
		/usr/bin/yum list >/dev/null 2>&1
		exit $?
		;;

	svc-run-status)
		NAME=$1
		/usr/sbin/service $NAME status
		exit $?
		;;
	svc-boot-status)
		NAME=$1
		/sbin/chkconfig --list "$NAME" | /bin/grep -q ':on'
		exit $?
		;;
	svc-init)
		NAME=$1
		VERB=$2
		if test "x$NAME" = "xcogd" && test "x$VERB" = "xrestart" && test "x$COGD" != "x"; then
			touch /var/lock/cogd/.needs-restart
		else
			/usr/sbin/service $NAME $VERB
		fi
		exit $?
		;;
	svc-init-force)
		NAME=$1
		VERB=$2
		/usr/sbin/service $NAME $VERB
		exit $?
		;;
	svc-enable)
		NAME=$1
		/sbin/chkconfig "$NAME" on
		exit $?
		;;
	svc-disable)
		NAME=$1
		/sbin/chkconfig "$NAME" off
		exit $?
		;;
	esac
}

#################################################################

on_gentoo () {
	export CLEAN_DELAY=0

	case $ACTION in
	pkg-version)
		NAME=$1
		/usr/bin/eix -I -q -e "$NAME"
		if [ $? -ne 0 ]; then
			exit 1
		else
			/usr/bin/eix -e "$NAME" --format '<installedversions:NAMEVERSION>'|grep -v '\[[0-9]*\]'|sed -e 's,'"$NAME-"',,'
			exit 0
		fi
		;;
	pkg-latest)
		NAME=$1
		/usr/bin/eix -q -e "$NAME"
		exit $?
		;;
	pkg-install)
		NAME=$1
		VERSION=$2
		if [ "x$VERSION" = "xlatest" ]; then
			/usr/bin/eix -n -q -e "$NAME" -! -u
			if [ $? -ne 0 ]; then
				/usr/bin/emerge -q "$NAME"
				exit $?
			fi
			/usr/bin/eix -n -q -e "$NAME" -I
			if [ $? -ne 0 ]; then
				/usr/bin/emerge -q "$NAME"
				exit $?
			fi
			exit $?
		else
			# specific version
			P_VERSION=$(/usr/bin/eix -n -e "$NAME" --format '<installedversions:NAMEVERSION>'|grep -v '\[[0-9]*\]'|sed -e 's,'"$NAME-"',,')
			if [ "$P_VERSION" != "$VERSION" ]; then
				/usr/bin/emerge -q \="$NAME-$VERSION"
			fi
			exit $?
		fi
		;;
	pkg-remove)
		NAME=$1
		/usr/bin/eix -n -q -e "$NAME" -! -I
		if [ $? -ne 0 ]; then
			/usr/bin/emerge -q -C "$NAME"
		fi
		exit $?
		;;
	pkg-recache)
		/usr/bin/eix-sync -q
		exit 1;
		;;

	svc-run-status)
		NAME=$1
		/sbin/service $NAME status
		exit $?
		;;
	svc-boot-status)
		NAME=$1
		/sbin/rc-update | /bin/grep -q "$NAME"
		exit $?
		;;
	svc-init)
		NAME=$1
		VERB=$2
		if test "x$NAME" = "xcogd" && test "x$VERB" = "xrestart" && test "x$COGD" != "x"; then
			touch /var/lock/cogd/.needs-restart
		else
			/sbin/service $NAME $VERB
		fi
		exit $?
		;;
	svc-init-force)
		NAME=$1
		VERB=$2
		/sbin/service $NAME $VERB
		exit $?
		;;
	svc-enable)
		NAME=$1
		/sbin/rc-update add "$NAME"
		exit $?
		;;
	svc-disable)
		NAME=$1
		/sbin/rc-update del "$NAME"
		exit $?
		;;
	esac
}

#################################################################

if [ "x$ACTION" = "xidentify" ]; then
	echo "$AUTO_SVC (services)"
	echo "$AUTO_PKG (packaging)"
	exit 0
fi

case $SYSTYPE in
debian)
	on_debian "$@"
	;;
redhat)
	on_redhat "$@"
	;;
gentoo)
	on_gentoo "$@"
	;;
*)
	# unknown flavor
	exit 126
	;;
esac

# unknown command, the on_* functions didn't exit
exit 125
